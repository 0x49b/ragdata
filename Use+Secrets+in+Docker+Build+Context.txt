Use Secrets in Docker Build Context

Sometimes it's necessary to consume a secret value (e.g. an access key)
inside the Dockerfile when building images. Because the Docker build
context has no access to the Tekton build task environment, the only way
to pass certain environment variables is using build args. In ESTA
Tekton, docker build args can be specified with the ocBuildVars property
in the docker config block. When it comes to secret values, those shall
be stored in a Pipeline Seceret and only be referenced in the
ocBuildVars.

Here's how to achieve this:

1.  Add the secret value to a Pipeline Secret under a given key (e.g.
    DOCKER_SECRET_KEY)
    Â 

2.  Define a build argument in your estaTektonPipeline.json:

  estaTektonPipeline.json

  {

  ...

  "docker": {

  "ocBuildVars": [

  "SECRET_KEY=$DOCKER_SECRET_KEY"

  ]

  }

  }

3.  Define the build argument in your Dockerfile and map it into an env
    var:

  Dockerfile

  FROM ...

  ARG SECRET_KEY

  ENV MY_SECRET_KEY=${SECRET_KEY}

Watch the syntax!

Please be careful on the syntax in the estaTektonPipeline.json: use
$VARNAME but not ${VARNAME}.
The latter will be considered a pre-defined pipeline parameter and
substituted before the pipeline is stated where no env vars from the
pipeline secrets are yet available.
